{"version":3,"sources":["components/common/Loader.module.css","index.module.css","api/api.js","helpers/getFullMonthName.js","helpers/modifyEmployeesData.js","redux/reducers/employees.js","components/RadioButtons.jsx","components/EmployeeItem.jsx","components/Employee.jsx","components/EmployeesList.jsx","components/MonthSection.jsx","components/EmployeesBirthday.jsx","components/common/Loader.jsx","components/Employees.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","instance","axios","baseURL","employeesAPI","get","then","response","data","getFullMonthName","Date","toLocaleString","month","toLowerCase","modifyEmployeesData","map","item","dob","isActive","SET_EMPLOYEES","SET_AS_ACTIVE","SET_AS_IN_ACTIVE","DISABLE_LOADING","SET_TO_LOCAL_STORAGE","RESTORE_FROM_STORAGE","initialState","employeesList","isLoading","setToLocalStorage","type","RadioButtons","id","dispatch","useDispatch","setActive","setAsActive","setInActive","setAsInActive","useEffect","className","classes","employees__rowItem","name","checked","onChange","value","EmployeeItem","firstName","lastName","active","Employee","alphabetLetter","filteredList","useSelector","state","employees","filter","sort","a","b","localeCompare","employees__item","employees__subHeadline","length","employees__row","employees__rowEmpty","src","alt","EmployeesList","employees__list","employees__headline","MonthSection","monthName","employees__monthRow","EmployeesBirthday","isActiveIncludes","some","employees__birthday","Loader","ldsRing","Employees","localStorage","getItem","dataFromLocalStorage","JSON","parse","App","exact","path","to","component","reducers","combineReducers","action","setItem","stringify","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3f12305.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Loader_ldsRing__2RDFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employees\":\"src_employees__1JQyz\",\"employees__headline\":\"src_employees__headline__27r1R\",\"employees__list\":\"src_employees__list__3HNx2\",\"employees__item\":\"src_employees__item__1kObi\",\"employees__subHeadline\":\"src_employees__subHeadline__1RC0t\",\"employees__row\":\"src_employees__row__hDkW1\",\"employees__rowItem\":\"src_employees__rowItem__2flSa\",\"employees__rowEmpty\":\"src_employees__rowEmpty__1xSjv\",\"employees__birthday\":\"src_employees__birthday__3KiCP\",\"employees__monthRow\":\"src_employees__monthRow__SWU8V\",\"active\":\"src_active__xzWN3\"};","import * as axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://yalantis-react-school-api.yalantis.com/',\n})\n\nexport const employeesAPI = {\n  getEmployees() {\n    return instance.get('api/task0/users').then((response) => response.data)\n  },\n}\n","const getFullMonthName = (data) => {\n  return new Date(data).toLocaleString('default', { month: 'long' }).toLowerCase()\n}\nexport default getFullMonthName\n","import getFullMonthName from './getFullMonthName'\n\nconst modifyEmployeesData = (data) => (\n  data.map((item) => ({\n    ...item,\n    dob: getFullMonthName(item.dob),\n    isActive: false,\n  }))\n)\n\nexport default modifyEmployeesData","import { employeesAPI } from '../../api/api'\nimport modifyEmployeesData from '../../helpers/modifyEmployeesData'\n\nconst SET_EMPLOYEES = 'SET_EMPLOYEES'\nconst SET_AS_ACTIVE = 'SET_AS_ACTIVE'\nconst SET_AS_IN_ACTIVE = 'SET_AS_IN_ACTIVE'\nconst DISABLE_LOADING = 'DISABLE_LOADING'\nconst SET_TO_LOCAL_STORAGE = 'SET_TO_LOCAL_STORAGE'\nconst RESTORE_FROM_STORAGE = 'RESTORE_FROM_STORAGE'\n\nlet initialState = {\n  employeesList: [],\n  isLoading: true,\n}\n\nexport const employees = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_EMPLOYEES:\n      return {\n        ...state,\n        employeesList: [...action.employees],\n      }\n    case SET_AS_ACTIVE:\n      return {\n        ...state,\n        employeesList: state.employeesList.map((item) =>\n          item.id === action.id ? { ...item, isActive: true } : item,\n        ),\n      }\n    case SET_AS_IN_ACTIVE:\n      return {\n        ...state,\n        employeesList: state.employeesList.map((item) =>\n          item.id === action.id ? { ...item, isActive: false } : item,\n        ),\n      }\n    case DISABLE_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      }\n    case SET_TO_LOCAL_STORAGE:\n      localStorage.setItem('employeesStorageData', JSON.stringify(state))\n      return {\n        ...state\n      }\n    case RESTORE_FROM_STORAGE:\n      return {\n        ...action.data\n      }\n    default:\n      return state\n  }\n}\n\nexport const setEmployees = (employees) => ({\n  type: SET_EMPLOYEES,\n  employees,\n})\n\nexport const setAsActive = (id) => ({\n  type: SET_AS_ACTIVE,\n  id,\n})\n\nexport const setAsInActive = (id) => ({\n  type: SET_AS_IN_ACTIVE,\n  id,\n})\n\nexport const disableLoading = () => ({\n  type: DISABLE_LOADING,\n})\n\nexport const setToLocalStorage = () => ({\n  type: SET_TO_LOCAL_STORAGE,\n})\n\nexport const restoreFromStorage = (data) => ({\n  type: RESTORE_FROM_STORAGE,\n  data\n})\n\nexport const getEmployees = () => {\n  return async (dispatch) => {\n    let response = await employeesAPI.getEmployees()\n    dispatch(setEmployees(modifyEmployeesData(response)))\n    dispatch(disableLoading())\n    dispatch(setToLocalStorage())\n  }\n}\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setToLocalStorage } from '../redux/reducers/employees'\nimport { setAsActive } from '../redux/reducers/employees'\nimport { setAsInActive } from '../redux/reducers/employees'\nimport classes from '../index.module.css'\n\nconst RadioButtons = ({ id, isActive }) => {\n  const dispatch = useDispatch()\n\n  const setActive = () => dispatch(setAsActive(id))\n\n  const setInActive = () => dispatch(setAsInActive(id))\n\n  useEffect(() => {\n    dispatch(setToLocalStorage())\n  },[isActive, dispatch])\n\n  return (\n    <div className={classes.employees__rowItem}>\n      <label>\n        <input\n          type='radio'\n          name={id}\n          checked={isActive === true}\n          onChange={() => {\n            setActive()\n          }}\n          value='true'\n        />\n        Active\n      </label>\n      <label>\n        <input\n          type='radio'\n          name={id}\n          checked={isActive === false}\n          onChange={() => {\n            setInActive()\n          }}\n          value='false'\n        />\n        Not Active\n      </label>\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import RadioButtons from './RadioButtons'\nimport classes from '../index.module.css'\n\nconst EmployeeItem = ({ firstName, lastName, id, isActive }) => {\n  return (\n    <>\n      <div className={isActive ? classes.active : null}>\n        {firstName} {lastName}\n      </div>\n      <RadioButtons id={id} isActive={isActive} />\n    </>\n  )\n}\n\nexport default EmployeeItem\n","import EmployeeItem from './EmployeeItem'\nimport { useSelector } from 'react-redux'\nimport classes from '../index.module.css'\n\nconst Employee = ({ alphabetLetter }) => {\n  const employeesList = useSelector((state) => state.employees.employeesList)\n\n  let filteredList = employeesList\n    .filter((item) => item.firstName[0].toLowerCase() === alphabetLetter)\n    .sort((a, b) => a.firstName.localeCompare(b.firstName))\n\n  return (\n    <div className={classes.employees__item}>\n      <strong className={classes.employees__subHeadline}>{alphabetLetter}</strong>\n      {filteredList.length ? (\n        filteredList.map((item) => (\n          <div className={classes.employees__row} key={item.id}>\n            <EmployeeItem {...item} />\n          </div>\n        ))\n      ) : (\n        <div className={classes.employees__rowEmpty}>\n          No Employees\n          <img src=\"https://icon-library.com/images/sad-faces-icon/sad-faces-icon-20.jpg\" alt=\"\"/>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Employee\n","import Employee from './Employee'\nimport classes from '../index.module.css'\n\nconst EmployeesList = () => {\n  const alphabet = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ]\n\n  return (\n    <div className={classes.employees__list}>\n      <h2 className={classes.employees__headline}>Employees</h2>\n      {alphabet.map((alphabetLetter) => (\n        <Employee alphabetLetter={alphabetLetter} key={alphabetLetter} />\n      ))}\n    </div>\n  )\n}\n\nexport default EmployeesList\n","import { useSelector } from 'react-redux'\nimport classes from '../index.module.css'\n\nconst MonthSection = ({ monthName }) => {\n  const employeesList = useSelector((state) => state.employees.employeesList)\n\n  let filteredList = employeesList\n    .filter((item) => item.dob === monthName && item.isActive === true)\n    .sort((a, b) => a.lastName.localeCompare(b.lastName))\n\n  return (\n    <div className={classes.employees__monthRow}>\n      <strong>{monthName}</strong>\n      {filteredList.length ? (\n        filteredList.map((item) => (\n          <div key={item.id}>\n            {item.firstName} {item.lastName}\n          </div>\n        ))\n      ) : (\n        <div>No Employees</div>\n      )}\n    </div>\n  )\n}\n\nexport default MonthSection\n","import { useSelector } from 'react-redux'\nimport MonthSection from './MonthSection'\nimport classes from '../index.module.css'\n\nconst EmployeesBirthday = () => {\n  const month = [\n    'november',\n    'january',\n    'february',\n    'march',\n    'april',\n    'may',\n    'june',\n    'july',\n    'august',\n    'september',\n    'october',\n  ]\n\n  const employeesList = useSelector((state) => state.employees.employeesList)\n  const isActiveIncludes = employeesList.some((item) => item.isActive === true)\n\n  return (\n    <div className={classes.employees__birthday}>\n      <h2 className={classes.employees__headline}>Employees birthday</h2>\n      {isActiveIncludes\n        ? month.map((item) => <MonthSection key={item} monthName={item} />)\n        : 'Employees List is empty'}\n    </div>\n  )\n}\n\nexport default EmployeesBirthday\n","import classes from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={classes.ldsRing}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEmployees, restoreFromStorage } from '../redux/reducers/employees'\nimport EmployeesList from './EmployeesList'\nimport EmployeesBirthday from './EmployeesBirthday'\nimport Loader from './common/Loader'\nimport classes from '../index.module.css'\n\nconst Employees = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!localStorage.getItem('employeesStorageData')) {\n      dispatch(getEmployees())\n    } else {\n      let dataFromLocalStorage = JSON.parse(localStorage.getItem('employeesStorageData'))\n      dispatch(restoreFromStorage(dataFromLocalStorage))\n    }\n  }, [dispatch])\n\n  const isLoading = useSelector((state) => state.employees.isLoading)\n\n  if (isLoading) {\n    return (\n      <>\n        <Loader />\n      </>\n    )\n  }\n\n  return (\n    <div className={classes.employees}>\n      <EmployeesList />\n      <EmployeesBirthday />\n    </div>\n  )\n}\n\nexport default Employees\n","import { Switch, Route, Redirect } from 'react-router-dom'\nimport Employees from './components/Employees'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Redirect to='/employees' />\n      </Route>\n      <Route path='/employees' component={Employees} />\n      <Route path='*'>\n        <div>404 Not Found</div>\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport { employees } from './reducers/employees'\nimport thunkMiddleware from 'redux-thunk'\n\nlet reducers = combineReducers({\n  employees,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>  \n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}